version: '1.0'
stages:
- prepare
- build
- deploy
- publish
steps:
  main_clone:
    title: Clone main repository
    type: git-clone
    stage: prepare
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_BRANCH}}'
    git: github
  post_main_clone:
    title: Post main clone
    type: parallel
    stage: prepare
    steps:
    - title: Cloning cloud-harness repository...
      type: git-clone
      stage: prepare
      repo: https://github.com/MetaCell/cloud-harness.git
      revision: '${{CLOUDHARNESS_BRANCH}}'
      working_directory: .
      git: github
  prepare_deployment:
    title: Prepare helm chart
    image: python:3.9.10
    stage: prepare
    working_directory: .
    commands:
    - bash cloud-harness/install.sh
    - harness-deployment cloud-harness . -t ${{CF_BUILD_ID}} -d ${{DOMAIN}} -r ${{REGISTRY}}
      -n ${{NAMESPACE}} -rs ${{REGISTRY_SECRET}} -e dev -i osb-portal
  prepare_deployment_view:
    commands:
    - helm template ./deployment/helm --debug -n ${{NAMESPACE}}
    environment:
    - ACTION=auth
    - KUBE_CONTEXT=${{NAMESPACE}}
    image: codefresh/cfstep-helm:3.6.2
    stage: prepare
    title: View helm chart
  build_base_images:
    title: Build base images
    type: parallel
    stage: build
    steps:
      cloudharness-django-debian:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: infrastructure/base-images/cloudharness-django-debian/Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/cloudharness-django-debian
        title: Cloudharness django debian
        working_directory: ./cloud-harness
      cloudharness-base:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: infrastructure/base-images/cloudharness-base/Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/cloudharness-base
        title: Cloudharness base
        working_directory: ./cloud-harness
      cloudharness-frontend-build:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: infrastructure/base-images/cloudharness-frontend-build/Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/cloudharness-frontend-build
        title: Cloudharness frontend build
        working_directory: ./cloud-harness
      cloudharness-base-debian:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: infrastructure/base-images/cloudharness-base-debian/Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/cloudharness-base-debian
        title: Cloudharness base debian
        working_directory: ./cloud-harness
      cloudharness-django:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: infrastructure/base-images/cloudharness-django/Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/cloudharness-django
        title: Cloudharness django
        working_directory: ./cloud-harness
      cloudharness-fastapi:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: infrastructure/base-images/cloudharness-fastapi/Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/cloudharness-fastapi
        title: Cloudharness fastapi
        working_directory: ./cloud-harness
      cloudharness-fastapi-debian:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: infrastructure/base-images/cloudharness-fastapi-debian/Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/cloudharness-fastapi-debian
        title: Cloudharness fastapi debian
        working_directory: ./cloud-harness
  build_static_images:
    title: Build static images
    type: parallel
    stage: build
    steps:
      cloudharness-flask:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/cloudharness-flask
        title: Cloudharness flask
        working_directory: ./cloud-harness/infrastructure/common-images/cloudharness-flask
  build_application_images:
    type: parallel
    stage: build
    steps:
      notifications:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/notifications
        title: Notifications
        working_directory: ./cloud-harness/applications/notifications/server
      accounts:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/accounts
        title: Accounts
        working_directory: ./applications/accounts
      volumemanager:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/volumemanager
        title: Volumemanager
        working_directory: ./cloud-harness/applications/volumemanager/server
      sentry:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/sentry
        title: Sentry
        working_directory: ./cloud-harness/applications/sentry
      jupyterhub:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/jupyterhub
        title: Jupyterhub
        working_directory: ./applications/jupyterhub
      samples:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/samples
        title: Samples
        working_directory: ./cloud-harness/applications/samples
      samples-print-file:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/samples-print-file
        title: Samples print file
        working_directory: ./cloud-harness/applications/samples/tasks/print-file
      samples-sum:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/samples-sum
        title: Samples sum
        working_directory: ./cloud-harness/applications/samples/tasks/sum
      common:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/common
        title: Common
        working_directory: ./cloud-harness/applications/common/server
      events:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/events
        title: Events
        working_directory: ./cloud-harness/applications/events
      workflows-send-result-event:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/workflows-send-result-event
        title: Workflows send result event
        working_directory: ./cloud-harness/applications/workflows/tasks/send-result-event
      workflows-extract-download:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/workflows-extract-download
        title: Workflows extract download
        working_directory: ./cloud-harness/applications/workflows/tasks/extract-download
      workflows-notify-queue:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/workflows-notify-queue
        title: Workflows notify queue
        working_directory: ./cloud-harness/applications/workflows/tasks/notify-queue
      workflows:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/workflows
        title: Workflows
        working_directory: ./cloud-harness/applications/workflows/server
      workspaces-figshare-copy:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/workspaces-figshare-copy
        title: Workspaces figshare copy
        working_directory: ./applications/workspaces/tasks/figshare-copy
      workspaces-scan-workspace:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/workspaces-scan-workspace
        title: Workspaces scan workspace
        working_directory: ./applications/workspaces/tasks/scan-workspace
      workspaces-github-copy:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/workspaces-github-copy
        title: Workspaces github copy
        working_directory: ./applications/workspaces/tasks/github-copy
      workspaces-dandi-copy:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/workspaces-dandi-copy
        title: Workspaces dandi copy
        working_directory: ./applications/workspaces/tasks/dandi-copy
      workspaces:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/workspaces
        title: Workspaces
        working_directory: ./applications/workspaces/server
      netpyne:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/netpyne
        title: Netpyne
        working_directory: ./applications/netpyne
      accounts-api:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/accounts-api
        title: Accounts api
        working_directory: ./applications/accounts-api
      osb-portal:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/osb-portal
        title: Osb portal
        working_directory: ./applications/osb-portal
      backoffice:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/backoffice
        title: Backoffice
        working_directory: ./applications/backoffice
      nwb-explorer:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/nwb-explorer
        title: Nwb explorer
        working_directory: ./applications/nwb-explorer
      jupyterlab:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/osb/
        image_name: osb/jupyterlab
        title: Jupyterlab
        working_directory: ./applications/jupyterlab
  deployment:
    stage: deploy
    image: codefresh/cfstep-helm:3.6.2
    title: Installing chart
    environment:
    - CHART_REF=./deployment/helm
    - RELEASE_NAME=${{NAMESPACE}}
    - KUBE_CONTEXT=${{CLUSTER_NAME}}
    - NAMESPACE=${{NAMESPACE}}
    - CHART_VERSION=${{DEPLOYMENT_PUBLISH_TAG}}
    - HELM_REPO_USE_HTTP=false
    - HELM_REPO_CONTEXT_PATH=
    - TIMEOUT=600s
    - VALUESFILE_values=./deployment/helm/values.yaml
  publish:
    type: parallel
    stage: publish
    steps:
      publish_cloudharness-django-debian:
        stage: publish
        type: push
        title: Cloudharness django debian
        candidate: '${{REGISTRY}}/osb/cloudharness-django-debian:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_cloudharness-base:
        stage: publish
        type: push
        title: Cloudharness base
        candidate: '${{REGISTRY}}/osb/cloudharness-base:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_cloudharness-frontend-build:
        stage: publish
        type: push
        title: Cloudharness frontend build
        candidate: '${{REGISTRY}}/osb/cloudharness-frontend-build:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_cloudharness-base-debian:
        stage: publish
        type: push
        title: Cloudharness base debian
        candidate: '${{REGISTRY}}/osb/cloudharness-base-debian:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_cloudharness-django:
        stage: publish
        type: push
        title: Cloudharness django
        candidate: '${{REGISTRY}}/osb/cloudharness-django:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_cloudharness-fastapi:
        stage: publish
        type: push
        title: Cloudharness fastapi
        candidate: '${{REGISTRY}}/osb/cloudharness-fastapi:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_cloudharness-fastapi-debian:
        stage: publish
        type: push
        title: Cloudharness fastapi debian
        candidate: '${{REGISTRY}}/osb/cloudharness-fastapi-debian:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_cloudharness-flask:
        stage: publish
        type: push
        title: Cloudharness flask
        candidate: '${{REGISTRY}}/osb/cloudharness-flask:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_notifications:
        stage: publish
        type: push
        title: Notifications
        candidate: '${{REGISTRY}}/osb/notifications:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_accounts:
        stage: publish
        type: push
        title: Accounts
        candidate: '${{REGISTRY}}/osb/accounts:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_volumemanager:
        stage: publish
        type: push
        title: Volumemanager
        candidate: '${{REGISTRY}}/osb/volumemanager:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_sentry:
        stage: publish
        type: push
        title: Sentry
        candidate: '${{REGISTRY}}/osb/sentry:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_jupyterhub:
        stage: publish
        type: push
        title: Jupyterhub
        candidate: '${{REGISTRY}}/osb/jupyterhub:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_samples:
        stage: publish
        type: push
        title: Samples
        candidate: '${{REGISTRY}}/osb/samples:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_samples-print-file:
        stage: publish
        type: push
        title: Samples print file
        candidate: '${{REGISTRY}}/osb/samples-print-file:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_samples-sum:
        stage: publish
        type: push
        title: Samples sum
        candidate: '${{REGISTRY}}/osb/samples-sum:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_common:
        stage: publish
        type: push
        title: Common
        candidate: '${{REGISTRY}}/osb/common:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_events:
        stage: publish
        type: push
        title: Events
        candidate: '${{REGISTRY}}/osb/events:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workflows-send-result-event:
        stage: publish
        type: push
        title: Workflows send result event
        candidate: '${{REGISTRY}}/osb/workflows-send-result-event:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workflows-extract-download:
        stage: publish
        type: push
        title: Workflows extract download
        candidate: '${{REGISTRY}}/osb/workflows-extract-download:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workflows-notify-queue:
        stage: publish
        type: push
        title: Workflows notify queue
        candidate: '${{REGISTRY}}/osb/workflows-notify-queue:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workflows:
        stage: publish
        type: push
        title: Workflows
        candidate: '${{REGISTRY}}/osb/workflows:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workspaces-figshare-copy:
        stage: publish
        type: push
        title: Workspaces figshare copy
        candidate: '${{REGISTRY}}/osb/workspaces-figshare-copy:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workspaces-scan-workspace:
        stage: publish
        type: push
        title: Workspaces scan workspace
        candidate: '${{REGISTRY}}/osb/workspaces-scan-workspace:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workspaces-github-copy:
        stage: publish
        type: push
        title: Workspaces github copy
        candidate: '${{REGISTRY}}/osb/workspaces-github-copy:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workspaces-dandi-copy:
        stage: publish
        type: push
        title: Workspaces dandi copy
        candidate: '${{REGISTRY}}/osb/workspaces-dandi-copy:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workspaces:
        stage: publish
        type: push
        title: Workspaces
        candidate: '${{REGISTRY}}/osb/workspaces:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_netpyne:
        stage: publish
        type: push
        title: Netpyne
        candidate: '${{REGISTRY}}/osb/netpyne:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_accounts-api:
        stage: publish
        type: push
        title: Accounts api
        candidate: '${{REGISTRY}}/osb/accounts-api:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_osb-portal:
        stage: publish
        type: push
        title: Osb portal
        candidate: '${{REGISTRY}}/osb/osb-portal:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_backoffice:
        stage: publish
        type: push
        title: Backoffice
        candidate: '${{REGISTRY}}/osb/backoffice:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_nwb-explorer:
        stage: publish
        type: push
        title: Nwb explorer
        candidate: '${{REGISTRY}}/osb/nwb-explorer:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_jupyterlab:
        stage: publish
        type: push
        title: Jupyterlab
        candidate: '${{REGISTRY}}/osb/jupyterlab:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
