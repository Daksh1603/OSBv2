# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from workspaces.models.base_model_ import Model
from workspaces import util


class WorkspaceCollaborator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, user_id=None):  # noqa: E501
        """WorkspaceCollaborator - a model defined in OpenAPI

        :param id: The id of this WorkspaceCollaborator.  # noqa: E501
        :type id: int
        :param user_id: The user_id of this WorkspaceCollaborator.  # noqa: E501
        :type user_id: str
        """
        self.openapi_types = {
            'id': int,
            'user_id': str
        }

        self.attribute_map = {
            'id': 'id',
            'user_id': 'user_id'
        }

        self._id = id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt) -> 'WorkspaceCollaborator':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorkspaceCollaborator of this WorkspaceCollaborator.  # noqa: E501
        :rtype: WorkspaceCollaborator
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this WorkspaceCollaborator.


        :return: The id of this WorkspaceCollaborator.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WorkspaceCollaborator.


        :param id: The id of this WorkspaceCollaborator.
        :type id: int
        """

        self._id = id

    @property
    def user_id(self):
        """Gets the user_id of this WorkspaceCollaborator.

        Workspace Collaborator keycloak user id  # noqa: E501

        :return: The user_id of this WorkspaceCollaborator.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this WorkspaceCollaborator.

        Workspace Collaborator keycloak user id  # noqa: E501

        :param user_id: The user_id of this WorkspaceCollaborator.
        :type user_id: str
        """
        if user_id is None:
            raise ValueError("Invalid value for `user_id`, must not be `None`")  # noqa: E501

        self._user_id = user_id
