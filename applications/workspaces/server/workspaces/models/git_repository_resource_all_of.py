# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from workspaces.models.base_model_ import Model
from workspaces import util


class GITRepositoryResourceAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ref=None, sha=None):  # noqa: E501
        """GITRepositoryResourceAllOf - a model defined in OpenAPI

        :param ref: The ref of this GITRepositoryResourceAllOf.  # noqa: E501
        :type ref: str
        :param sha: The sha of this GITRepositoryResourceAllOf.  # noqa: E501
        :type sha: str
        """
        self.openapi_types = {
            'ref': str,
            'sha': str
        }

        self.attribute_map = {
            'ref': 'ref',
            'sha': 'sha'
        }

        self._ref = ref
        self._sha = sha

    @classmethod
    def from_dict(cls, dikt) -> 'GITRepositoryResourceAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GITRepositoryResource_allOf of this GITRepositoryResourceAllOf.  # noqa: E501
        :rtype: GITRepositoryResourceAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ref(self):
        """Gets the ref of this GITRepositoryResourceAllOf.

        The GIT ref  # noqa: E501

        :return: The ref of this GITRepositoryResourceAllOf.
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref):
        """Sets the ref of this GITRepositoryResourceAllOf.

        The GIT ref  # noqa: E501

        :param ref: The ref of this GITRepositoryResourceAllOf.
        :type ref: str
        """

        self._ref = ref

    @property
    def sha(self):
        """Gets the sha of this GITRepositoryResourceAllOf.

        The GIT sha of the resource  # noqa: E501

        :return: The sha of this GITRepositoryResourceAllOf.
        :rtype: str
        """
        return self._sha

    @sha.setter
    def sha(self, sha):
        """Sets the sha of this GITRepositoryResourceAllOf.

        The GIT sha of the resource  # noqa: E501

        :param sha: The sha of this GITRepositoryResourceAllOf.
        :type sha: str
        """

        self._sha = sha
