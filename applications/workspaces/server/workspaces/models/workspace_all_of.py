# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from workspaces.models.base_model_ import Model
from workspaces.models.user import User
from workspaces.models.workspace_resource import WorkspaceResource
from workspaces import util

from workspaces.models.user import User  # noqa: E501
from workspaces.models.workspace_resource import WorkspaceResource  # noqa: E501

class WorkspaceAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resources=None, user=None):  # noqa: E501
        """WorkspaceAllOf - a model defined in OpenAPI

        :param resources: The resources of this WorkspaceAllOf.  # noqa: E501
        :type resources: List[WorkspaceResource]
        :param user: The user of this WorkspaceAllOf.  # noqa: E501
        :type user: User
        """
        self.openapi_types = {
            'resources': List[WorkspaceResource],
            'user': User
        }

        self.attribute_map = {
            'resources': 'resources',
            'user': 'user'
        }

        self._resources = resources
        self._user = user

    @classmethod
    def from_dict(cls, dikt) -> 'WorkspaceAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Workspace_allOf of this WorkspaceAllOf.  # noqa: E501
        :rtype: WorkspaceAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resources(self):
        """Gets the resources of this WorkspaceAllOf.

        Resources of the workspace  # noqa: E501

        :return: The resources of this WorkspaceAllOf.
        :rtype: List[WorkspaceResource]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this WorkspaceAllOf.

        Resources of the workspace  # noqa: E501

        :param resources: The resources of this WorkspaceAllOf.
        :type resources: List[WorkspaceResource]
        """

        self._resources = resources

    @property
    def user(self):
        """Gets the user of this WorkspaceAllOf.


        :return: The user of this WorkspaceAllOf.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this WorkspaceAllOf.


        :param user: The user of this WorkspaceAllOf.
        :type user: User
        """

        self._user = user
