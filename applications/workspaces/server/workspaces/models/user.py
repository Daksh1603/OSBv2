# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from workspaces.models.base_model_ import Model
from workspaces import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, keycloak_id=None, firstname=None, lastname=None, email=None):  # noqa: E501
        """User - a model defined in OpenAPI

        :param id: The id of this User.  # noqa: E501
        :type id: int
        :param keycloak_id: The keycloak_id of this User.  # noqa: E501
        :type keycloak_id: str
        :param firstname: The firstname of this User.  # noqa: E501
        :type firstname: str
        :param lastname: The lastname of this User.  # noqa: E501
        :type lastname: str
        :param email: The email of this User.  # noqa: E501
        :type email: str
        """
        self.openapi_types = {
            'id': int,
            'keycloak_id': str,
            'firstname': str,
            'lastname': str,
            'email': str
        }

        self.attribute_map = {
            'id': 'id',
            'keycloak_id': 'keycloak_id',
            'firstname': 'firstname',
            'lastname': 'lastname',
            'email': 'email'
        }

        self._id = id
        self._keycloak_id = keycloak_id
        self._firstname = firstname
        self._lastname = lastname
        self._email = email

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: int
        """

        self._id = id

    @property
    def keycloak_id(self):
        """Gets the keycloak_id of this User.

        Keycloak user id  # noqa: E501

        :return: The keycloak_id of this User.
        :rtype: str
        """
        return self._keycloak_id

    @keycloak_id.setter
    def keycloak_id(self, keycloak_id):
        """Sets the keycloak_id of this User.

        Keycloak user id  # noqa: E501

        :param keycloak_id: The keycloak_id of this User.
        :type keycloak_id: str
        """

        self._keycloak_id = keycloak_id

    @property
    def firstname(self):
        """Gets the firstname of this User.

        First name of the user (derived from Keycload)  # noqa: E501

        :return: The firstname of this User.
        :rtype: str
        """
        return self._firstname

    @firstname.setter
    def firstname(self, firstname):
        """Sets the firstname of this User.

        First name of the user (derived from Keycload)  # noqa: E501

        :param firstname: The firstname of this User.
        :type firstname: str
        """

        self._firstname = firstname

    @property
    def lastname(self):
        """Gets the lastname of this User.

        Last name of the user (derived from Keycload)  # noqa: E501

        :return: The lastname of this User.
        :rtype: str
        """
        return self._lastname

    @lastname.setter
    def lastname(self, lastname):
        """Sets the lastname of this User.

        Last name of the user (derived from Keycload)  # noqa: E501

        :param lastname: The lastname of this User.
        :type lastname: str
        """

        self._lastname = lastname

    @property
    def email(self):
        """Gets the email of this User.

        Email address of the user (derived from Keycloak)  # noqa: E501

        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this User.

        Email address of the user (derived from Keycloak)  # noqa: E501

        :param email: The email of this User.
        :type email: str
        """

        self._email = email
