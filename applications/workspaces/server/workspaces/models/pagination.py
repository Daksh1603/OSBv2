# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from workspaces.models.base_model_ import Model
from workspaces import util


class Pagination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_page=None, number_of_pages=None, total=None):  # noqa: E501
        """Pagination - a model defined in OpenAPI

        :param current_page: The current_page of this Pagination.  # noqa: E501
        :type current_page: int
        :param number_of_pages: The number_of_pages of this Pagination.  # noqa: E501
        :type number_of_pages: int
        :param total: The total of this Pagination.  # noqa: E501
        :type total: int
        """
        self.openapi_types = {
            'current_page': int,
            'number_of_pages': int,
            'total': int
        }

        self.attribute_map = {
            'current_page': 'current_page',
            'number_of_pages': 'number_of_pages',
            'total': 'total'
        }

        self._current_page = current_page
        self._number_of_pages = number_of_pages
        self._total = total

    @classmethod
    def from_dict(cls, dikt) -> 'Pagination':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Pagination of this Pagination.  # noqa: E501
        :rtype: Pagination
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_page(self):
        """Gets the current_page of this Pagination.


        :return: The current_page of this Pagination.
        :rtype: int
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page):
        """Sets the current_page of this Pagination.


        :param current_page: The current_page of this Pagination.
        :type current_page: int
        """

        self._current_page = current_page

    @property
    def number_of_pages(self):
        """Gets the number_of_pages of this Pagination.


        :return: The number_of_pages of this Pagination.
        :rtype: int
        """
        return self._number_of_pages

    @number_of_pages.setter
    def number_of_pages(self, number_of_pages):
        """Sets the number_of_pages of this Pagination.


        :param number_of_pages: The number_of_pages of this Pagination.
        :type number_of_pages: int
        """

        self._number_of_pages = number_of_pages

    @property
    def total(self):
        """Gets the total of this Pagination.


        :return: The total of this Pagination.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this Pagination.


        :param total: The total of this Pagination.
        :type total: int
        """

        self._total = total
