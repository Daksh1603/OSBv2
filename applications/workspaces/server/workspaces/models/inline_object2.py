# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from workspaces.models.base_model_ import Model
from workspaces import util


class InlineObject2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, osbrepository_id=None, context_name=None, full_filename=None, uid=None):  # noqa: E501
        """InlineObject2 - a model defined in OpenAPI

        :param osbrepository_id: The osbrepository_id of this InlineObject2.  # noqa: E501
        :type osbrepository_id: int
        :param context_name: The context_name of this InlineObject2.  # noqa: E501
        :type context_name: str
        :param full_filename: The full_filename of this InlineObject2.  # noqa: E501
        :type full_filename: str
        :param uid: The uid of this InlineObject2.  # noqa: E501
        :type uid: str
        """
        self.openapi_types = {
            'osbrepository_id': int,
            'context_name': str,
            'full_filename': str,
            'uid': str
        }

        self.attribute_map = {
            'osbrepository_id': 'osbrepository_id',
            'context_name': 'context_name',
            'full_filename': 'full_filename',
            'uid': 'uid'
        }

        self._osbrepository_id = osbrepository_id
        self._context_name = context_name
        self._full_filename = full_filename
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt) -> 'InlineObject2':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_object_2 of this InlineObject2.  # noqa: E501
        :rtype: InlineObject2
        """
        return util.deserialize_model(dikt, cls)

    @property
    def osbrepository_id(self):
        """Gets the osbrepository_id of this InlineObject2.

        OSB Repository id  # noqa: E501

        :return: The osbrepository_id of this InlineObject2.
        :rtype: int
        """
        return self._osbrepository_id

    @osbrepository_id.setter
    def osbrepository_id(self, osbrepository_id):
        """Sets the osbrepository_id of this InlineObject2.

        OSB Repository id  # noqa: E501

        :param osbrepository_id: The osbrepository_id of this InlineObject2.
        :type osbrepository_id: int
        """

        self._osbrepository_id = osbrepository_id

    @property
    def context_name(self):
        """Gets the context_name of this InlineObject2.

        OSB Repository Context Name  # noqa: E501

        :return: The context_name of this InlineObject2.
        :rtype: str
        """
        return self._context_name

    @context_name.setter
    def context_name(self, context_name):
        """Sets the context_name of this InlineObject2.

        OSB Repository Context Name  # noqa: E501

        :param context_name: The context_name of this InlineObject2.
        :type context_name: str
        """

        self._context_name = context_name

    @property
    def full_filename(self):
        """Gets the full_filename of this InlineObject2.

        folder/file name  # noqa: E501

        :return: The full_filename of this InlineObject2.
        :rtype: str
        """
        return self._full_filename

    @full_filename.setter
    def full_filename(self, full_filename):
        """Sets the full_filename of this InlineObject2.

        folder/file name  # noqa: E501

        :param full_filename: The full_filename of this InlineObject2.
        :type full_filename: str
        """

        self._full_filename = full_filename

    @property
    def uid(self):
        """Gets the uid of this InlineObject2.

        unique identifier for the resource in the (external) repository  # noqa: E501

        :return: The uid of this InlineObject2.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this InlineObject2.

        unique identifier for the resource in the (external) repository  # noqa: E501

        :param uid: The uid of this InlineObject2.
        :type uid: str
        """

        self._uid = uid
