# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from workspaces import util
from workspaces.models.base_model_ import Model


class RepositoryResourceBaseAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, osbrepository_id=None):  # noqa: E501
        """RepositoryResourceBaseAllOf - a model defined in OpenAPI

        :param name: The name of this RepositoryResourceBaseAllOf.  # noqa: E501
        :type name: str
        :param osbrepository_id: The osbrepository_id of this RepositoryResourceBaseAllOf.  # noqa: E501
        :type osbrepository_id: int
        """
        self.openapi_types = {"name": str, "osbrepository_id": int}

        self.attribute_map = {"name": "name", "osbrepository_id": "osbrepository_id"}

        self._name = name
        self._osbrepository_id = osbrepository_id

    @classmethod
    def from_dict(cls, dikt) -> "RepositoryResourceBaseAllOf":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RepositoryResourceBase_allOf of this RepositoryResourceBaseAllOf.  # noqa: E501
        :rtype: RepositoryResourceBaseAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this RepositoryResourceBaseAllOf.

        file name  # noqa: E501

        :return: The name of this RepositoryResourceBaseAllOf.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RepositoryResourceBaseAllOf.

        file name  # noqa: E501

        :param name: The name of this RepositoryResourceBaseAllOf.
        :type name: str
        """

        self._name = name

    @property
    def osbrepository_id(self):
        """Gets the osbrepository_id of this RepositoryResourceBaseAllOf.

        OSB Repository id  # noqa: E501

        :return: The osbrepository_id of this RepositoryResourceBaseAllOf.
        :rtype: int
        """
        return self._osbrepository_id

    @osbrepository_id.setter
    def osbrepository_id(self, osbrepository_id):
        """Sets the osbrepository_id of this RepositoryResourceBaseAllOf.

        OSB Repository id  # noqa: E501

        :param osbrepository_id: The osbrepository_id of this RepositoryResourceBaseAllOf.
        :type osbrepository_id: int
        """

        self._osbrepository_id = osbrepository_id
