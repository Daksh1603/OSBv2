/* tslint:disable */
/* eslint-disable */
/**
 * Workspaces manager API
 * Opensource Brain Platform - Reference Workspaces manager API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InlineObject2
 */
export interface InlineObject2 {
    /**
     * OSB Repository id
     * @type {number}
     * @memberof InlineObject2
     */
    osbrepositoryId?: number;
    /**
     * OSB Repository Context Name
     * @type {string}
     * @memberof InlineObject2
     */
    contextName?: string;
    /**
     * folder/file name
     * @type {string}
     * @memberof InlineObject2
     */
    fullFilename?: string;
    /**
     * unique identifier for the resource in the (external) repository
     * @type {string}
     * @memberof InlineObject2
     */
    uid?: string;
}

export function InlineObject2FromJSON(json: any): InlineObject2 {
    return InlineObject2FromJSONTyped(json, false);
}

export function InlineObject2FromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineObject2 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'osbrepositoryId': !exists(json, 'osbrepository_id') ? undefined : json['osbrepository_id'],
        'contextName': !exists(json, 'context_name') ? undefined : json['context_name'],
        'fullFilename': !exists(json, 'full_filename') ? undefined : json['full_filename'],
        'uid': !exists(json, 'uid') ? undefined : json['uid'],
    };
}

export function InlineObject2ToJSON(value?: InlineObject2 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'osbrepository_id': value.osbrepositoryId,
        'context_name': value.contextName,
        'full_filename': value.fullFilename,
        'uid': value.uid,
    };
}


