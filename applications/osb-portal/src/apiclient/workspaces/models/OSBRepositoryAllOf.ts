/* tslint:disable */
/* eslint-disable */
/**
 * Workspaces manager API
 * Opensource Brain Platform - Reference Workspaces manager API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RepositoryResourceNode,
    RepositoryResourceNodeFromJSON,
    RepositoryResourceNodeFromJSONTyped,
    RepositoryResourceNodeToJSON,
} from './';

/**
 * Repository
 * @export
 * @interface OSBRepositoryAllOf
 */
export interface OSBRepositoryAllOf {
    /**
     * List of repository resources
     * @type {Array<RepositoryResourceNode>}
     * @memberof OSBRepositoryAllOf
     */
    contextResources?: Array<RepositoryResourceNode>;
    /**
     * List of repository contexts
     * @type {Array<string>}
     * @memberof OSBRepositoryAllOf
     */
    allContexts?: Array<string>;
    /**
     * Repository description
     * @type {string}
     * @memberof OSBRepositoryAllOf
     */
    description?: string;
}

export function OSBRepositoryAllOfFromJSON(json: any): OSBRepositoryAllOf {
    return OSBRepositoryAllOfFromJSONTyped(json, false);
}

export function OSBRepositoryAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): OSBRepositoryAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contextResources': !exists(json, 'context_resources') ? undefined : ((json['context_resources'] as Array<any>).map(RepositoryResourceNodeFromJSON)),
        'allContexts': !exists(json, 'all_contexts') ? undefined : json['all_contexts'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function OSBRepositoryAllOfToJSON(value?: OSBRepositoryAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'context_resources': value.contextResources === undefined ? undefined : ((value.contextResources as Array<any>).map(RepositoryResourceNodeToJSON)),
        'all_contexts': value.allContexts,
        'description': value.description,
    };
}


